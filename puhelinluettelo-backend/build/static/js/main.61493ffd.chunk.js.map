{"version":3,"sources":["services/personsDbCom.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","DelPersonBtn","handler","onClick","Person","person","delHandler","name","phone","Input","inputlabel","inputvalue","value","onChange","PersonForm","submitfunction","newName","newPhone","handleNameChange","handleNewNumberChange","onSubmit","type","Persons","personsFiltered","delPerson","map","Notification","message","className","ErrorMsg","App","useState","persons","setPersons","setNewName","setNewPhone","filterText","setFilterText","notification","setNotification","errorMsg","setErrorMsg","setPersonsFiltered","useEffect","console","log","setTimeout","personService","initialPersons","catch","error","length","event","target","filtered","filter","toLowerCase","match","preventDefault","personObject","nameExist","find","window","confirm","returnedPerson","concat","JSON","stringify","persontodel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61493ffd.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data) \r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update, remove }","import React, { useState, useEffect } from 'react'\nimport personService from './services/personsDbCom'\nimport './style.css'\n\n// Palauttaa yksitt채isen Person \"olion\" poistavan napin, id suoraan handlerille\nconst DelPersonBtn = ({handler}) => {\n\n  return(\n    <button onClick={handler}>delete</button>\n  )\n}\n\nconst Person = ({person, delHandler}) =>{\n  return(\n    <li>{person.name} {person.phone} <DelPersonBtn handler={delHandler}/> </li>\n  )\n}\n\nconst Input = ({inputlabel, inputvalue, handler }) =>{\n  return (\n    <div>\n      {inputlabel}: <input\n       value={inputvalue}\n       onChange={handler}\n      />\n    </div>\n  )\n}\n\nconst PersonForm = ({submitfunction,newName,newPhone,handleNameChange,handleNewNumberChange}) => {\n  return(\n    <form onSubmit={submitfunction}>\n       \n        <Input inputlabel={'name'} inputvalue={newName} handler={handleNameChange} />        \n        <Input inputlabel={'number'} inputvalue={newPhone} handler={handleNewNumberChange} />\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = ({personsFiltered, delPerson}) => {\n  return(\n    <ul>\n        {personsFiltered.map(person => \n            <Person key={person.id} person={person} delHandler={()=>delPerson(person)} />\n        )}\n    </ul>\n  )\n}\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"notification\">\n      {message}\n    </div>\n  )\n}\n\nconst ErrorMsg = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName ] = useState('')\n  const [newPhone, setNewPhone ] = useState('')\n  const [filterText, setFilterText ] = useState('')\n  const [notification, setNotification] = useState('')\n  const [errorMsg, setErrorMsg] = useState('')\n  const [personsFiltered, setPersonsFiltered] = useState(persons)  \n\n  useEffect(() => {\n    console.log('effect')\n    // try to hide notification, level clarcson\n    //setNotification(null)\n    //setErrorMsg(null)    \n    setTimeout(() => {\n      setNotification(null)\n      setErrorMsg(null)\n    }, 1)\n    \n    personService\n      .getAll()\n      .then( initialPersons => {\n        console.log('promise fulfilled')\n        setPersons(initialPersons)\n        setPersonsFiltered(initialPersons)\n         \n      })\n      .catch(error =>{\n        console.log('fail on getting Persons from db')\n      })      \n  }, [])\n  console.log('render', persons.length, 'persons')\n\n  const addPerson =(event) =>{\n    event.preventDefault()\n    const personObject ={\n      name: newName,\n      phone: newPhone\n    }    \n    const nameExist= persons.find(person => person.name.toLowerCase() === personObject.name.toLowerCase())\n    if( nameExist ){\n      console.log(\"Exist!\")      \n      if(window.confirm(`${newName} is already added to phonebook, replace old number with a new one?`)){\n        // P채ivitet채채n puhelinnumero\n        personService\n        .update(nameExist.id, personObject).then( returnedPerson => {\n          setPersons(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson ))\n          setPersonsFiltered(persons.map(person => person.id !== returnedPerson.id ? person : returnedPerson ))\n          setNotification(\n            `Number of '${returnedPerson.name}' was succesfully edited`\n          )\n          setTimeout(() => {\n            setNotification(null)\n          }, 3000) \n        } )\n        .catch(error => {\n          setPersons(persons.filter(person => person.id !== nameExist.id ))\n          setPersonsFiltered(persons.filter(person => person.id !== nameExist.id ))\n          console.log(error)\n          setErrorMsg(\n            `Note '${nameExist.name}' was already removed from server`\n          )\n          setTimeout(() => {\n            setErrorMsg(null)\n          }, 3000) \n        \n        })\n      }\n    }else{\n      personService\n      .create(personObject)\n      .then(returnedPerson => {\n        setPersons(persons.concat(returnedPerson))\n        setNewName('') \n        setNewPhone(' ')\n        setPersonsFiltered( persons.concat(returnedPerson) )\n        setNotification(\n          `Contact '${returnedPerson.name}' was succesfully created`\n        )        \n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)      \n       \n      }).catch( error => {\n        console.log(error.response.data)\n        setErrorMsg( JSON.stringify(error.response.data) )\n        setTimeout(() => {\n          setErrorMsg(null)\n        }, 3000) \n      })     \n        \n    }\n  }\n\n  const delPerson = persontodel =>{\n    if(window.confirm(`Doyou really want to delete ${persontodel.name}?`)){\n      console.log(`log: deleting ${persontodel.id}`)\n    \n      personService.remove(persontodel.id)\n      .then( () =>{\n        setPersons(persons.filter(person => person.id !== persontodel.id ))\n        setPersonsFiltered(persons.filter(person => person.id !== persontodel.id ))\n        setNotification(\n          `Person '${persontodel.name}' was succesfully removed from server`\n        )\n        setTimeout(() => {\n          setNotification(null)\n        }, 3000)      \n      } )\n      .catch(error => {\n        console.log(error)\n        console.log(`maybe failed to delete ${persontodel.id}`)\n      })\n\n    }   \n    \n  }\n  \n  const handleNameChange = (event) => {    \n    setNewName(event.target.value)\n  }\n  const handleNewNumberChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setFilterText(event.target.value)    \n    const filtered = persons.filter( persons => persons.name.toLowerCase().match(filterText.toLowerCase()) )\n    //console.log(filtered)    \n    if(event.target.value.length>0){     \n      console.log('show filtered')      \n      setPersonsFiltered( filtered )\n    }else{      \n      console.log('show persons')\n      setPersonsFiltered( persons )\n      \n    }    \n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <ErrorMsg message={errorMsg} />\n      <Input inputlabel={'Filter numbers:'} inputvalue={filterText} handler={handleFilterChange} />\n      <h2>add New</h2>\n      <PersonForm submitfunction={addPerson} newName={newName} newPhone={newPhone} handleNameChange={handleNameChange} handleNewNumberChange={handleNewNumberChange} />\n      <h2>Numbers</h2>\n      <Persons personsFiltered={personsFiltered} delPerson={delPerson} />\n      \n      ---\n      <div>debug: {newName}</div>\n      <div>debug Phone: {newPhone}</div>\n      <div>debug filer text: {filterText}</div>\n    </div>\n  )\n\n}\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}